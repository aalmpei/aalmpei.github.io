// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// Capture the output of this into a variable, if you want
(function(FUNCTION_TABLE_OFFSET, globalScope) {
  var Module = {};
  var args = [];
  Module.arguments = [];
// === Auto-generated preamble library stuff ===
//========================================
// Runtime essentials
//========================================
function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.pop();
    var func = callback.func;
    if (typeof func === 'number') {
      func = FUNCTION_TABLE[func];
    }
    func(callback.arg === undefined ? null : callback.arg);
  }
}
var __ATINIT__ = []; // functions called during startup
function initRuntime() {
  callRuntimeCallbacks(__ATINIT__);
}
// === Body ===
var _s_methods;
var _s__doc__;
var __str5;
var __str4;
var __str3;
var __str2;
var __str1;
var __str;
_s_methods=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_s__doc__=allocate([117,114,108,111,112,101,110,40,117,114,108,44,32,112,97,114,97,109,115,41,32,45,62,32,115,116,114,105,110,103,10,116,104,105,115,32,102,117,110,99,116,105,111,110,32,111,112,101,110,115,32,97,106,97,120,32,114,101,113,117,101,115,116,32,105,110,32,101,109,115,99,114,105,112,116,101,110,32,101,110,118,105,114,111,110,109,101,110,116,10,119,104,105,99,104,32,108,111,97,100,115,32,97,32,99,111,114,114,101,115,112,111,110,100,105,110,103,32,102,105,108,101,32,111,110,32,116,104,101,32,119,101,98,32,97,110,100,32,114,101,116,117,114,110,115,32,105,116,32,97,115,32,97,32,115,116,114,105,110,103,46,10,73,102,32,116,104,101,32,115,101,99,111,110,100,32,111,112,116,105,111,110,97,108,32,112,97,114,97,109,101,116,101,114,32,105,115,32,117,115,101,100,40,99,111,110,116,97,105,110,105,110,103,32,117,114,108,101,110,99,111,100,101,100,32,112,97,114,97,109,101,116,101,114,115,41,44,10,116,104,101,32,80,79,83,84,32,109,101,116,104,111,100,32,119,105,108,108,32,98,101,32,117,115,101,100,46,0], "i8", ALLOC_NORMAL);
__str5=allocate([115,0,0,0], "i8", ALLOC_NORMAL);
__str4=allocate([32,32,32,32,32,32,32,105,102,32,40,119,105,110,100,111,119,46,88,77,76,72,116,116,112,82,101,113,117,101,115,116,41,32,123,9,65,74,65,88,61,110,101,119,32,88,77,76,72,116,116,112,82,101,113,117,101,115,116,40,41,59,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,9,65,74,65,88,61,110,101,119,32,65,99,116,105,118,101,88,79,98,106,101,99,116,40,39,77,105,99,114,111,115,111,102,116,46,88,77,76,72,84,84,80,39,41,59,32,32,32,32,32,32,125,32,32,32,32,32,32,105,102,32,40,65,74,65,88,41,32,123,9,65,74,65,88,46,111,112,101,110,40,39,80,79,83,84,39,44,32,80,111,105,110,116,101,114,95,115,116,114,105,110,103,105,102,121,40,117,114,108,41,44,32,102,97,108,115,101,41,59,9,65,74,65,88,46,115,101,116,82,101,113,117,101,115,116,72,101,97,100,101,114,40,39,67,111,110,116,101,110,116,45,116,121,112,101,39,44,32,39,97,112,112,108,105,99,97,116,105,111,110,47,120,45,119,119,119,45,102,111,114,109,45,117,114,108,101,110,99,111,100,101,100,39,41,59,9,65,74,65,88,46,115,101,110,100,40,80,111,105,110,116,101,114,95,115,116,114,105,110,103,105,102,121,40,112,97,114,97,109,115,41,41,59,9,65,74,65,88,46,114,101,115,112,111,110,115,101,84,101,120,116,59,32,32,32,32,32,32,125,0], "i8", ALLOC_NORMAL);
__str3=allocate([32,32,32,32,32,32,32,105,102,32,40,119,105,110,100,111,119,46,88,77,76,72,116,116,112,82,101,113,117,101,115,116,41,32,123,32,32,32,32,32,32,32,32,32,32,32,32,32,32,9,65,74,65,88,61,110,101,119,32,88,77,76,72,116,116,112,82,101,113,117,101,115,116,40,41,59,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,9,65,74,65,88,61,110,101,119,32,65,99,116,105,118,101,88,79,98,106,101,99,116,40,39,77,105,99,114,111,115,111,102,116,46,88,77,76,72,84,84,80,39,41,59,32,32,32,32,32,32,125,32,32,32,32,32,32,105,102,32,40,65,74,65,88,41,32,123,9,65,74,65,88,46,111,112,101,110,40,39,71,69,84,39,44,32,80,111,105,110,116,101,114,95,115,116,114,105,110,103,105,102,121,40,117,114,108,41,44,32,102,97,108,115,101,41,59,9,65,74,65,88,46,115,101,110,100,40,110,117,108,108,41,59,9,65,74,65,88,46,114,101,115,112,111,110,115,101,84,101,120,116,59,32,32,32,32,32,32,125,0], "i8", ALLOC_NORMAL);
__str2=allocate([115,124,115,58,117,114,108,111,112,101,110,0], "i8", ALLOC_NORMAL);
__str1=allocate([117,114,108,111,112,101,110,0], "i8", ALLOC_NORMAL);
__str=allocate([95,115,111,99,107,101,116,0], "i8", ALLOC_NORMAL);
/* no memory initializer */
function runPostSets() {
HEAP32[((_s_methods)>>2)]=((__str1)|0);
HEAP32[(((_s_methods)+(4))>>2)]=(FUNCTION_TABLE_OFFSET + 2);
HEAP32[(((_s_methods)+(12))>>2)]=((_s__doc__)|0);
}
if (!awaitingMemoryInitializer) runPostSets();
FUNCTION_TABLE.push.apply(FUNCTION_TABLE, [0,0,_em_urlopen,0]);
// EMSCRIPTEN_START_FUNCS
function _init_socket(){_Py_InitModule4_64(__str|0,_s_methods|0,0,0,1013);return}function _em_urlopen(r1,r2){var r3,r4,r5;r1=STACKTOP;STACKTOP=STACKTOP+8|0;r3=r1+4;HEAP32[r3>>2]=0;if((_PyArg_ParseTuple(r2,__str2|0,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,HEAP32[tempInt>>2]=r1,HEAP32[tempInt+4>>2]=r3,tempInt))|0)==0){r4=0;STACKTOP=r1;return r4}if((HEAP32[r3>>2]|0)==0){r5=_emscripten_run_script_string(__str3|0)}else{r5=_emscripten_run_script_string(__str4|0)}r4=_Py_BuildValue(__str5|0,(tempInt=STACKTOP,STACKTOP=STACKTOP+4|0,HEAP32[tempInt>>2]=r5,tempInt));STACKTOP=r1;return r4}
// EMSCRIPTEN_END_FUNCS
Module["_init_socket"] = _init_socket;
// Warning: printing of i64 values may be slightly rounded! No deep i64 math used, so precise i64 code not included
var i64Math = null;
// === Auto-generated postamble setup entry stuff ===
function run(args) {
  initRuntime();
}
Module['run'] = run;
// {{PRE_RUN_ADDITIONS}}
run();
// {{POST_RUN_ADDITIONS}}
  // {{MODULE_ADDITIONS}}
  return Module;
});
