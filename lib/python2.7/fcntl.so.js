// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// Capture the output of this into a variable, if you want
(function(FUNCTION_TABLE_OFFSET, globalScope) {
  var Module = {};
  var args = [];
  Module.arguments = [];
// === Auto-generated preamble library stuff ===
//========================================
// Runtime essentials
//========================================
function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.pop();
    var func = callback.func;
    if (typeof func === 'number') {
      func = FUNCTION_TABLE[func];
    }
    func(callback.arg === undefined ? null : callback.arg);
  }
}
var __ATINIT__ = []; // functions called during startup
function initRuntime() {
  callRuntimeCallbacks(__ATINIT__);
}
// === Body ===
var _module_doc;
var _lockf_doc;
var _ioctl_doc;
var _flock_doc;
var _fcntl_methods;
var _fcntl_doc;
var __str9;
var __str8;
var __str7;
var __str65;
var __str64;
var __str63;
var __str62;
var __str61;
var __str60;
var __str6;
var __str59;
var __str58;
var __str57;
var __str56;
var __str55;
var __str54;
var __str53;
var __str52;
var __str51;
var __str50;
var __str5;
var __str49;
var __str48;
var __str47;
var __str46;
var __str45;
var __str44;
var __str43;
var __str42;
var __str41;
var __str40;
var __str4;
var __str39;
var __str38;
var __str37;
var __str36;
var __str35;
var __str34;
var __str33;
var __str32;
var __str31;
var __str30;
var __str3;
var __str29;
var __str28;
var __str27;
var __str26;
var __str25;
var __str24;
var __str23;
var __str22;
var __str21;
var __str20;
var __str2;
var __str19;
var __str18;
var __str17;
var __str16;
var __str15;
var __str14;
var __str13;
var __str12;
var __str11;
var __str10;
var __str1;
var __str;
_module_doc=allocate([84,104,105,115,32,109,111,100,117,108,101,32,112,101,114,102,111,114,109,115,32,102,105,108,101,32,99,111,110,116,114,111,108,32,97,110,100,32,73,47,79,32,99,111,110,116,114,111,108,32,111,110,32,102,105,108,101,32,10,100,101,115,99,114,105,112,116,111,114,115,46,32,32,73,116,32,105,115,32,97,110,32,105,110,116,101,114,102,97,99,101,32,116,111,32,116,104,101,32,102,99,110,116,108,40,41,32,97,110,100,32,105,111,99,116,108,40,41,32,85,110,105,120,10,114,111,117,116,105,110,101,115,46,32,32,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,99,97,110,32,98,101,32,111,98,116,97,105,110,101,100,32,119,105,116,104,32,116,104,101,32,102,105,108,101,110,111,40,41,32,109,101,116,104,111,100,32,111,102,10,97,32,102,105,108,101,32,111,114,32,115,111,99,107,101,116,32,111,98,106,101,99,116,46,0,0,0,0], "i8", ALLOC_NORMAL);
_lockf_doc=allocate([108,111,99,107,102,32,40,102,100,44,32,111,112,101,114,97,116,105,111,110,44,32,108,101,110,103,116,104,61,48,44,32,115,116,97,114,116,61,48,44,32,119,104,101,110,99,101,61,48,41,10,10,84,104,105,115,32,105,115,32,101,115,115,101,110,116,105,97,108,108,121,32,97,32,119,114,97,112,112,101,114,32,97,114,111,117,110,100,32,116,104,101,32,102,99,110,116,108,40,41,32,108,111,99,107,105,110,103,32,99,97,108,108,115,46,32,32,102,100,32,105,115,32,116,104,101,10,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,111,102,32,116,104,101,32,102,105,108,101,32,116,111,32,108,111,99,107,32,111,114,32,117,110,108,111,99,107,44,32,97,110,100,32,111,112,101,114,97,116,105,111,110,32,105,115,32,111,110,101,32,111,102,32,116,104,101,10,102,111,108,108,111,119,105,110,103,32,118,97,108,117,101,115,58,10,10,32,32,32,32,76,79,67,75,95,85,78,32,45,32,117,110,108,111,99,107,10,32,32,32,32,76,79,67,75,95,83,72,32,45,32,97,99,113,117,105,114,101,32,97,32,115,104,97,114,101,100,32,108,111,99,107,10,32,32,32,32,76,79,67,75,95,69,88,32,45,32,97,99,113,117,105,114,101,32,97,110,32,101,120,99,108,117,115,105,118,101,32,108,111,99,107,10,10,87,104,101,110,32,111,112,101,114,97,116,105,111,110,32,105,115,32,76,79,67,75,95,83,72,32,111,114,32,76,79,67,75,95,69,88,44,32,105,116,32,99,97,110,32,97,108,115,111,32,98,101,32,98,105,116,119,105,115,101,32,79,82,101,100,32,119,105,116,104,10,76,79,67,75,95,78,66,32,116,111,32,97,118,111,105,100,32,98,108,111,99,107,105,110,103,32,111,110,32,108,111,99,107,32,97,99,113,117,105,115,105,116,105,111,110,46,32,32,73,102,32,76,79,67,75,95,78,66,32,105,115,32,117,115,101,100,32,97,110,100,32,116,104,101,10,108,111,99,107,32,99,97,110,110,111,116,32,98,101,32,97,99,113,117,105,114,101,100,44,32,97,110,32,73,79,69,114,114,111,114,32,119,105,108,108,32,98,101,32,114,97,105,115,101,100,32,97,110,100,32,116,104,101,32,101,120,99,101,112,116,105,111,110,32,119,105,108,108,10,104,97,118,101,32,97,110,32,101,114,114,110,111,32,97,116,116,114,105,98,117,116,101,32,115,101,116,32,116,111,32,69,65,67,67,69,83,32,111,114,32,69,65,71,65,73,78,32,40,100,101,112,101,110,100,105,110,103,32,111,110,32,116,104,101,32,111,112,101,114,97,116,105,110,103,10,115,121,115,116,101,109,32,45,45,32,102,111,114,32,112,111,114,116,97,98,105,108,105,116,121,44,32,99,104,101,99,107,32,102,111,114,32,101,105,116,104,101,114,32,118,97,108,117,101,41,46,10,10,108,101,110,103,116,104,32,105,115,32,116,104,101,32,110,117,109,98,101,114,32,111,102,32,98,121,116,101,115,32,116,111,32,108,111,99,107,44,32,119,105,116,104,32,116,104,101,32,100,101,102,97,117,108,116,32,109,101,97,110,105,110,103,32,116,111,32,108,111,99,107,32,116,111,10,69,79,70,46,32,32,115,116,97,114,116,32,105,115,32,116,104,101,32,98,121,116,101,32,111,102,102,115,101,116,44,32,114,101,108,97,116,105,118,101,32,116,111,32,119,104,101,110,99,101,44,32,116,111,32,116,104,97,116,32,116,104,101,32,108,111,99,107,10,115,116,97,114,116,115,46,32,32,119,104,101,110,99,101,32,105,115,32,97,115,32,119,105,116,104,32,102,105,108,101,111,98,106,46,115,101,101,107,40,41,44,32,115,112,101,99,105,102,105,99,97,108,108,121,58,10,10,32,32,32,32,48,32,45,32,114,101,108,97,116,105,118,101,32,116,111,32,116,104,101,32,115,116,97,114,116,32,111,102,32,116,104,101,32,102,105,108,101,32,40,83,69,69,75,95,83,69,84,41,10,32,32,32,32,49,32,45,32,114,101,108,97,116,105,118,101,32,116,111,32,116,104,101,32,99,117,114,114,101,110,116,32,98,117,102,102,101,114,32,112,111,115,105,116,105,111,110,32,40,83,69,69,75,95,67,85,82,41,10,32,32,32,32,50,32,45,32,114,101,108,97,116,105,118,101,32,116,111,32,116,104,101,32,101,110,100,32,111,102,32,116,104,101,32,102,105,108,101,32,40,83,69,69,75,95,69,78,68,41,0,0,0,0], "i8", ALLOC_NORMAL);
_ioctl_doc=allocate([105,111,99,116,108,40,102,100,44,32,111,112,116,91,44,32,97,114,103,91,44,32,109,117,116,97,116,101,95,102,108,97,103,93,93,41,10,10,80,101,114,102,111,114,109,32,116,104,101,32,114,101,113,117,101,115,116,101,100,32,111,112,101,114,97,116,105,111,110,32,111,110,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,102,100,46,32,32,84,104,101,32,111,112,101,114,97,116,105,111,110,32,105,115,10,100,101,102,105,110,101,100,32,98,121,32,111,112,116,32,97,110,100,32,105,115,32,111,112,101,114,97,116,105,110,103,32,115,121,115,116,101,109,32,100,101,112,101,110,100,101,110,116,46,32,32,84,121,112,105,99,97,108,108,121,32,116,104,101,115,101,32,99,111,100,101,115,32,97,114,101,10,114,101,116,114,105,101,118,101,100,32,102,114,111,109,32,116,104,101,32,102,99,110,116,108,32,111,114,32,116,101,114,109,105,111,115,32,108,105,98,114,97,114,121,32,109,111,100,117,108,101,115,46,10,10,84,104,101,32,97,114,103,117,109,101,110,116,32,97,114,103,32,105,115,32,111,112,116,105,111,110,97,108,44,32,97,110,100,32,100,101,102,97,117,108,116,115,32,116,111,32,48,59,32,105,116,32,109,97,121,32,98,101,32,97,110,32,105,110,116,32,111,114,32,97,10,98,117,102,102,101,114,32,99,111,110,116,97,105,110,105,110,103,32,99,104,97,114,97,99,116,101,114,32,100,97,116,97,32,40,109,111,115,116,32,108,105,107,101,108,121,32,97,32,115,116,114,105,110,103,32,111,114,32,97,110,32,97,114,114,97,121,41,46,32,10,10,73,102,32,116,104,101,32,97,114,103,117,109,101,110,116,32,105,115,32,97,32,109,117,116,97,98,108,101,32,98,117,102,102,101,114,32,40,115,117,99,104,32,97,115,32,97,110,32,97,114,114,97,121,41,32,97,110,100,32,105,102,32,116,104,101,10,109,117,116,97,116,101,95,102,108,97,103,32,97,114,103,117,109,101,110,116,32,40,119,104,105,99,104,32,105,115,32,111,110,108,121,32,97,108,108,111,119,101,100,32,105,110,32,116,104,105,115,32,99,97,115,101,41,32,105,115,32,116,114,117,101,32,116,104,101,110,32,116,104,101,10,98,117,102,102,101,114,32,105,115,32,40,105,110,32,101,102,102,101,99,116,41,32,112,97,115,115,101,100,32,116,111,32,116,104,101,32,111,112,101,114,97,116,105,110,103,32,115,121,115,116,101,109,32,97,110,100,32,99,104,97,110,103,101,115,32,109,97,100,101,32,98,121,10,116,104,101,32,79,83,32,119,105,108,108,32,98,101,32,114,101,102,108,101,99,116,101,100,32,105,110,32,116,104,101,32,99,111,110,116,101,110,116,115,32,111,102,32,116,104,101,32,98,117,102,102,101,114,32,97,102,116,101,114,32,116,104,101,32,99,97,108,108,32,104,97,115,10,114,101,116,117,114,110,101,100,46,32,32,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,101,32,105,115,32,116,104,101,32,105,110,116,101,103,101,114,32,114,101,116,117,114,110,101,100,32,98,121,32,116,104,101,32,105,111,99,116,108,32,115,121,115,116,101,109,10,99,97,108,108,46,10,10,73,102,32,116,104,101,32,97,114,103,117,109,101,110,116,32,105,115,32,97,32,109,117,116,97,98,108,101,32,98,117,102,102,101,114,32,97,110,100,32,116,104,101,32,109,117,116,97,98,108,101,95,102,108,97,103,32,97,114,103,117,109,101,110,116,32,105,115,32,110,111,116,10,112,97,115,115,101,100,32,111,114,32,105,115,32,102,97,108,115,101,44,32,116,104,101,32,98,101,104,97,118,105,111,114,32,105,115,32,97,115,32,105,102,32,97,32,115,116,114,105,110,103,32,104,97,100,32,98,101,101,110,32,112,97,115,115,101,100,46,32,32,84,104,105,115,10,98,101,104,97,118,105,111,114,32,119,105,108,108,32,99,104,97,110,103,101,32,105,110,32,102,117,116,117,114,101,32,114,101,108,101,97,115,101,115,32,111,102,32,80,121,116,104,111,110,46,10,10,73,102,32,116,104,101,32,97,114,103,117,109,101,110,116,32,105,115,32,97,110,32,105,109,109,117,116,97,98,108,101,32,98,117,102,102,101,114,32,40,109,111,115,116,32,108,105,107,101,108,121,32,97,32,115,116,114,105,110,103,41,32,116,104,101,110,32,97,32,99,111,112,121,10,111,102,32,116,104,101,32,98,117,102,102,101,114,32,105,115,32,112,97,115,115,101,100,32,116,111,32,116,104,101,32,111,112,101,114,97,116,105,110,103,32,115,121,115,116,101,109,32,97,110,100,32,116,104,101,32,114,101,116,117,114,110,32,118,97,108,117,101,32,105,115,32,97,10,115,116,114,105,110,103,32,111,102,32,116,104,101,32,115,97,109,101,32,108,101,110,103,116,104,32,99,111,110,116,97,105,110,105,110,103,32,119,104,97,116,101,118,101,114,32,116,104,101,32,111,112,101,114,97,116,105,110,103,32,115,121,115,116,101,109,32,112,117,116,32,105,110,10,116,104,101,32,98,117,102,102,101,114,46,32,32,84,104,101,32,108,101,110,103,116,104,32,111,102,32,116,104,101,32,97,114,103,32,98,117,102,102,101,114,32,105,110,32,116,104,105,115,32,99,97,115,101,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,116,111,10,101,120,99,101,101,100,32,49,48,50,52,32,98,121,116,101,115,46,10,10,73,102,32,116,104,101,32,97,114,103,32,103,105,118,101,110,32,105,115,32,97,110,32,105,110,116,101,103,101,114,32,111,114,32,105,102,32,110,111,110,101,32,105,115,32,115,112,101,99,105,102,105,101,100,44,32,116,104,101,32,114,101,115,117,108,116,32,118,97,108,117,101,32,105,115,10,97,110,32,105,110,116,101,103,101,114,32,99,111,114,114,101,115,112,111,110,100,105,110,103,32,116,111,32,116,104,101,32,114,101,116,117,114,110,32,118,97,108,117,101,32,111,102,32,116,104,101,32,105,111,99,116,108,32,99,97,108,108,32,105,110,32,116,104,101,32,67,10,99,111,100,101,46,0,0], "i8", ALLOC_NORMAL);
_flock_doc=allocate([102,108,111,99,107,40,102,100,44,32,111,112,101,114,97,116,105,111,110,41,10,10,80,101,114,102,111,114,109,32,116,104,101,32,108,111,99,107,32,111,112,101,114,97,116,105,111,110,32,111,112,32,111,110,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,102,100,46,32,32,83,101,101,32,116,104,101,32,85,110,105,120,32,10,109,97,110,117,97,108,32,112,97,103,101,32,102,111,114,32,102,108,111,99,107,40,51,41,32,102,111,114,32,100,101,116,97,105,108,115,46,32,32,40,79,110,32,115,111,109,101,32,115,121,115,116,101,109,115,44,32,116,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,10,101,109,117,108,97,116,101,100,32,117,115,105,110,103,32,102,99,110,116,108,40,41,46,41,0,0,0,0], "i8", ALLOC_NORMAL);
_fcntl_methods=allocate([0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_fcntl_doc=allocate([102,99,110,116,108,40,102,100,44,32,111,112,116,44,32,91,97,114,103,93,41,10,10,80,101,114,102,111,114,109,32,116,104,101,32,114,101,113,117,101,115,116,101,100,32,111,112,101,114,97,116,105,111,110,32,111,110,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,102,100,46,32,32,84,104,101,32,111,112,101,114,97,116,105,111,110,10,105,115,32,100,101,102,105,110,101,100,32,98,121,32,111,112,32,97,110,100,32,105,115,32,111,112,101,114,97,116,105,110,103,32,115,121,115,116,101,109,32,100,101,112,101,110,100,101,110,116,46,32,32,84,104,101,115,101,32,99,111,110,115,116,97,110,116,115,32,97,114,101,10,97,118,97,105,108,97,98,108,101,32,102,114,111,109,32,116,104,101,32,102,99,110,116,108,32,109,111,100,117,108,101,46,32,32,84,104,101,32,97,114,103,117,109,101,110,116,32,97,114,103,32,105,115,32,111,112,116,105,111,110,97,108,44,32,97,110,100,10,100,101,102,97,117,108,116,115,32,116,111,32,48,59,32,105,116,32,109,97,121,32,98,101,32,97,110,32,105,110,116,32,111,114,32,97,32,115,116,114,105,110,103,46,32,32,73,102,32,97,114,103,32,105,115,32,103,105,118,101,110,32,97,115,32,97,32,115,116,114,105,110,103,44,10,116,104,101,32,114,101,116,117,114,110,32,118,97,108,117,101,32,111,102,32,102,99,110,116,108,32,105,115,32,97,32,115,116,114,105,110,103,32,111,102,32,116,104,97,116,32,108,101,110,103,116,104,44,32,99,111,110,116,97,105,110,105,110,103,32,116,104,101,10,114,101,115,117,108,116,105,110,103,32,118,97,108,117,101,32,112,117,116,32,105,110,32,116,104,101,32,97,114,103,32,98,117,102,102,101,114,32,98,121,32,116,104,101,32,111,112,101,114,97,116,105,110,103,32,115,121,115,116,101,109,46,32,32,84,104,101,32,108,101,110,103,116,104,10,111,102,32,116,104,101,32,97,114,103,32,115,116,114,105,110,103,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,116,111,32,101,120,99,101,101,100,32,49,48,50,52,32,98,121,116,101,115,46,32,32,73,102,32,116,104,101,32,97,114,103,32,103,105,118,101,110,10,105,115,32,97,110,32,105,110,116,101,103,101,114,32,111,114,32,105,102,32,110,111,110,101,32,105,115,32,115,112,101,99,105,102,105,101,100,44,32,116,104,101,32,114,101,115,117,108,116,32,118,97,108,117,101,32,105,115,32,97,110,32,105,110,116,101,103,101,114,10,99,111,114,114,101,115,112,111,110,100,105,110,103,32,116,111,32,116,104,101,32,114,101,116,117,114,110,32,118,97,108,117,101,32,111,102,32,116,104,101,32,102,99,110,116,108,32,99,97,108,108,32,105,110,32,116,104,101,32,67,32,99,111,100,101,46,0,0], "i8", ALLOC_NORMAL);
__str9=allocate([70,95,83,69,84,70,76,0], "i8", ALLOC_NORMAL);
__str8=allocate([70,95,71,69,84,70,76,0], "i8", ALLOC_NORMAL);
__str7=allocate([70,95,83,69,84,70,68,0], "i8", ALLOC_NORMAL);
__str65=allocate([79,38,105,124,108,59,102,99,110,116,108,32,114,101,113,117,105,114,101,115,32,97,32,102,105,108,101,32,111,114,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,44,32,97,110,32,105,110,116,101,103,101,114,32,97,110,100,32,111,112,116,105,111,110,97,108,108,121,32,97,32,116,104,105,114,100,32,105,110,116,101,103,101,114,32,111,114,32,97,32,115,116,114,105,110,103,0,0,0], "i8", ALLOC_NORMAL);
__str64=allocate([102,99,110,116,108,32,115,116,114,105,110,103,32,97,114,103,32,116,111,111,32,108,111,110,103,0,0,0], "i8", ALLOC_NORMAL);
__str63=allocate([79,38,105,115,35,58,102,99,110,116,108,0], "i8", ALLOC_NORMAL);
__str62=allocate([79,38,73,124,105,59,105,111,99,116,108,32,114,101,113,117,105,114,101,115,32,97,32,102,105,108,101,32,111,114,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,44,32,97,110,32,105,110,116,101,103,101,114,32,97,110,100,32,111,112,116,105,111,110,97,108,108,121,32,97,110,32,105,110,116,101,103,101,114,32,111,114,32,98,117,102,102,101,114,32,97,114,103,117,109,101,110,116,0], "i8", ALLOC_NORMAL);
__str61=allocate([79,38,73,115,35,58,105,111,99,116,108,0], "i8", ALLOC_NORMAL);
__str60=allocate([105,111,99,116,108,32,115,116,114,105,110,103,32,97,114,103,32,116,111,111,32,108,111,110,103,0,0,0], "i8", ALLOC_NORMAL);
__str6=allocate([70,95,71,69,84,70,68,0], "i8", ALLOC_NORMAL);
__str59=allocate([79,38,73,119,35,124,105,58,105,111,99,116,108,0,0,0], "i8", ALLOC_NORMAL);
__str58=allocate([117,110,114,101,99,111,103,110,105,122,101,100,32,102,108,111,99,107,32,97,114,103,117,109,101,110,116,0], "i8", ALLOC_NORMAL);
__str57=allocate([79,38,105,58,102,108,111,99,107,0,0,0], "i8", ALLOC_NORMAL);
__str56=allocate([117,110,114,101,99,111,103,110,105,122,101,100,32,108,111,99,107,102,32,97,114,103,117,109,101,110,116,0], "i8", ALLOC_NORMAL);
__str55=allocate([79,38,105,124,79,79,105,58,108,111,99,107,102,0,0,0], "i8", ALLOC_NORMAL);
__str54=allocate([108,111,99,107,102,0,0,0], "i8", ALLOC_NORMAL);
__str53=allocate([102,108,111,99,107,0,0,0], "i8", ALLOC_NORMAL);
__str52=allocate([105,111,99,116,108,0,0,0], "i8", ALLOC_NORMAL);
__str51=allocate([73,95,80,85,78,76,73,78,75,0,0,0], "i8", ALLOC_NORMAL);
__str50=allocate([73,95,80,76,73,78,75,0], "i8", ALLOC_NORMAL);
__str5=allocate([70,95,68,85,80,70,68,0], "i8", ALLOC_NORMAL);
__str49=allocate([73,95,85,78,76,73,78,75,0,0,0,0], "i8", ALLOC_NORMAL);
__str48=allocate([73,95,76,73,78,75,0,0], "i8", ALLOC_NORMAL);
__str47=allocate([73,95,71,69,84,67,76,84,73,77,69,0], "i8", ALLOC_NORMAL);
__str46=allocate([73,95,83,69,84,67,76,84,73,77,69,0], "i8", ALLOC_NORMAL);
__str45=allocate([73,95,67,65,78,80,85,84,0,0,0,0], "i8", ALLOC_NORMAL);
__str44=allocate([73,95,71,69,84,66,65,78,68,0,0,0], "i8", ALLOC_NORMAL);
__str43=allocate([73,95,67,75,66,65,78,68,0,0,0,0], "i8", ALLOC_NORMAL);
__str42=allocate([73,95,65,84,77,65,82,75,0,0,0,0], "i8", ALLOC_NORMAL);
__str41=allocate([73,95,76,73,83,84,0,0], "i8", ALLOC_NORMAL);
__str40=allocate([73,95,82,69,67,86,70,68,0,0,0,0], "i8", ALLOC_NORMAL);
__str4=allocate([76,79,67,75,95,85,78,0], "i8", ALLOC_NORMAL);
__str39=allocate([73,95,83,69,78,68,70,68,0,0,0,0], "i8", ALLOC_NORMAL);
__str38=allocate([73,95,71,87,82,79,80,84,0,0,0,0], "i8", ALLOC_NORMAL);
__str37=allocate([73,95,83,87,82,79,80,84,0,0,0,0], "i8", ALLOC_NORMAL);
__str36=allocate([73,95,83,84,82,0,0,0], "i8", ALLOC_NORMAL);
__str35=allocate([73,95,70,68,73,78,83,69,82,84,0,0], "i8", ALLOC_NORMAL);
__str34=allocate([73,95,78,82,69,65,68,0], "i8", ALLOC_NORMAL);
__str33=allocate([73,95,71,82,68,79,80,84,0,0,0,0], "i8", ALLOC_NORMAL);
__str32=allocate([73,95,83,82,68,79,80,84,0,0,0,0], "i8", ALLOC_NORMAL);
__str31=allocate([73,95,80,69,69,75,0,0], "i8", ALLOC_NORMAL);
__str30=allocate([73,95,70,73,78,68,0,0], "i8", ALLOC_NORMAL);
__str3=allocate([76,79,67,75,95,78,66,0], "i8", ALLOC_NORMAL);
__str29=allocate([73,95,71,69,84,83,73,71,0,0,0,0], "i8", ALLOC_NORMAL);
__str28=allocate([73,95,83,69,84,83,73,71,0,0,0,0], "i8", ALLOC_NORMAL);
__str27=allocate([73,95,70,76,85,83,72,66,65,78,68,0], "i8", ALLOC_NORMAL);
__str26=allocate([73,95,70,76,85,83,72,0], "i8", ALLOC_NORMAL);
__str25=allocate([73,95,76,79,79,75,0,0], "i8", ALLOC_NORMAL);
__str24=allocate([73,95,80,79,80,0,0,0], "i8", ALLOC_NORMAL);
__str23=allocate([73,95,80,85,83,72,0,0], "i8", ALLOC_NORMAL);
__str22=allocate([70,68,95,67,76,79,69,88,69,67,0,0], "i8", ALLOC_NORMAL);
__str21=allocate([70,65,83,89,78,67,0,0], "i8", ALLOC_NORMAL);
__str20=allocate([70,95,83,69,84,76,75,87,54,52,0,0], "i8", ALLOC_NORMAL);
__str2=allocate([76,79,67,75,95,69,88,0], "i8", ALLOC_NORMAL);
__str19=allocate([70,95,83,69,84,76,75,54,52,0,0,0], "i8", ALLOC_NORMAL);
__str18=allocate([70,95,71,69,84,76,75,54,52,0,0,0], "i8", ALLOC_NORMAL);
__str17=allocate([70,95,85,78,76,67,75,0], "i8", ALLOC_NORMAL);
__str16=allocate([70,95,87,82,76,67,75,0], "i8", ALLOC_NORMAL);
__str15=allocate([70,95,82,68,76,67,75,0], "i8", ALLOC_NORMAL);
__str14=allocate([70,95,83,69,84,79,87,78,0,0,0,0], "i8", ALLOC_NORMAL);
__str13=allocate([70,95,71,69,84,79,87,78,0,0,0,0], "i8", ALLOC_NORMAL);
__str12=allocate([70,95,83,69,84,76,75,87,0,0,0,0], "i8", ALLOC_NORMAL);
__str11=allocate([70,95,83,69,84,76,75,0], "i8", ALLOC_NORMAL);
__str10=allocate([70,95,71,69,84,76,75,0], "i8", ALLOC_NORMAL);
__str1=allocate([76,79,67,75,95,83,72,0], "i8", ALLOC_NORMAL);
__str=allocate([102,99,110,116,108,0,0,0], "i8", ALLOC_NORMAL);
/* no memory initializer */
function runPostSets() {
HEAP32[((_fcntl_methods)>>2)]=((__str)|0);
HEAP32[(((_fcntl_methods)+(4))>>2)]=(FUNCTION_TABLE_OFFSET + 6);
HEAP32[(((_fcntl_methods)+(12))>>2)]=((_fcntl_doc)|0);
HEAP32[(((_fcntl_methods)+(16))>>2)]=((__str52)|0);
HEAP32[(((_fcntl_methods)+(20))>>2)]=(FUNCTION_TABLE_OFFSET + 8);
HEAP32[(((_fcntl_methods)+(28))>>2)]=((_ioctl_doc)|0);
HEAP32[(((_fcntl_methods)+(32))>>2)]=((__str53)|0);
HEAP32[(((_fcntl_methods)+(36))>>2)]=(FUNCTION_TABLE_OFFSET + 10);
HEAP32[(((_fcntl_methods)+(44))>>2)]=((_flock_doc)|0);
HEAP32[(((_fcntl_methods)+(48))>>2)]=((__str54)|0);
HEAP32[(((_fcntl_methods)+(52))>>2)]=(FUNCTION_TABLE_OFFSET + 2);
HEAP32[(((_fcntl_methods)+(60))>>2)]=((_lockf_doc)|0);
}
if (!awaitingMemoryInitializer) runPostSets();
FUNCTION_TABLE.push.apply(FUNCTION_TABLE, [0,0,_fcntl_lockf,0,_conv_descriptor,0,_fcntl_fcntl,0,_fcntl_ioctl,0,_fcntl_flock,0]);
// EMSCRIPTEN_START_FUNCS
function _initfcntl(){var r1;r1=_Py_InitModule4_64(__str|0,_fcntl_methods|0,_module_doc|0,0,1013);if((r1|0)==0){return}_all_ins(_PyModule_GetDict(r1));return}function _all_ins(r1){if((_ins(r1,__str1|0,1)|0)!=0){return}if((_ins(r1,__str2|0,2)|0)!=0){return}if((_ins(r1,__str3|0,8)|0)!=0){return}if((_ins(r1,__str4|0,4)|0)!=0){return}if((_ins(r1,__str5|0,0)|0)!=0){return}if((_ins(r1,__str6|0,1)|0)!=0){return}if((_ins(r1,__str7|0,2)|0)!=0){return}if((_ins(r1,__str8|0,3)|0)!=0){return}if((_ins(r1,__str9|0,4)|0)!=0){return}if((_ins(r1,__str10|0,7)|0)!=0){return}if((_ins(r1,__str11|0,8)|0)!=0){return}if((_ins(r1,__str12|0,9)|0)!=0){return}if((_ins(r1,__str13|0,5)|0)!=0){return}if((_ins(r1,__str14|0,6)|0)!=0){return}if((_ins(r1,__str15|0,1)|0)!=0){return}if((_ins(r1,__str16|0,2)|0)!=0){return}if((_ins(r1,__str17|0,3)|0)!=0){return}if((_ins(r1,__str18|0,20)|0)!=0){return}if((_ins(r1,__str19|0,21)|0)!=0){return}if((_ins(r1,__str20|0,22)|0)!=0){return}if((_ins(r1,__str21|0,64)|0)!=0){return}if((_ins(r1,__str22|0,1)|0)!=0){return}if((_ins(r1,__str23|0,21250)|0)!=0){return}if((_ins(r1,__str24|0,21251)|0)!=0){return}if((_ins(r1,__str25|0,21252)|0)!=0){return}if((_ins(r1,__str26|0,21253)|0)!=0){return}if((_ins(r1,__str27|0,21276)|0)!=0){return}if((_ins(r1,__str28|0,21257)|0)!=0){return}if((_ins(r1,__str29|0,21258)|0)!=0){return}if((_ins(r1,__str30|0,21259)|0)!=0){return}if((_ins(r1,__str31|0,21263)|0)!=0){return}if((_ins(r1,__str32|0,21254)|0)!=0){return}if((_ins(r1,__str33|0,21255)|0)!=0){return}if((_ins(r1,__str34|0,21249)|0)!=0){return}if((_ins(r1,__str35|0,21264)|0)!=0){return}if((_ins(r1,__str36|0,21256)|0)!=0){return}if((_ins(r1,__str37|0,21267)|0)!=0){return}if((_ins(r1,__str38|0,21268)|0)!=0){return}if((_ins(r1,__str39|0,21265)|0)!=0){return}if((_ins(r1,__str40|0,21262)|0)!=0){return}if((_ins(r1,__str41|0,21269)|0)!=0){return}if((_ins(r1,__str42|0,21279)|0)!=0){return}if((_ins(r1,__str43|0,21277)|0)!=0){return}if((_ins(r1,__str44|0,21278)|0)!=0){return}if((_ins(r1,__str45|0,21282)|0)!=0){return}if((_ins(r1,__str46|0,21280)|0)!=0){return}if((_ins(r1,__str47|0,21281)|0)!=0){return}if((_ins(r1,__str48|0,21260)|0)!=0){return}if((_ins(r1,__str49|0,21261)|0)!=0){return}if((_ins(r1,__str50|0,21270)|0)!=0){return}_ins(r1,__str51|0,21271);return}function _ins(r1,r2,r3){var r4,r5;r4=_PyInt_FromLong(r3);if((r4|0)==0){r5=-1;return r5}if((_PyDict_SetItemString(r1,r2,r4)|0)<0){r5=-1;return r5}r2=r4|0;r1=HEAP32[r2>>2]-1|0;HEAP32[r2>>2]=r1;if((r1|0)!=0){r5=0;return r5}FUNCTION_TABLE[HEAP32[HEAP32[r4+4>>2]+24>>2]](r4);r5=0;return r5}function _fcntl_fcntl(r1,r2){var r3,r4,r5,r6,r7,r8,r9;r1=STACKTOP;STACKTOP=STACKTOP+1044|0;r3=r1;r4=r1+4;r5=r1+8;r6=r1+12;r7=r1+16;r8=r1+20;if((__PyArg_ParseTuple_SizeT(r2,__str63|0,(tempInt=STACKTOP,STACKTOP=STACKTOP+20|0,HEAP32[tempInt>>2]=FUNCTION_TABLE_OFFSET+4,HEAP32[tempInt+4>>2]=r3,HEAP32[tempInt+8>>2]=r4,HEAP32[tempInt+12>>2]=r6,HEAP32[tempInt+16>>2]=r7,tempInt))|0)==0){_PyErr_Clear();HEAP32[r5>>2]=0;if((__PyArg_ParseTuple_SizeT(r2,__str65|0,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,HEAP32[tempInt>>2]=FUNCTION_TABLE_OFFSET+4,HEAP32[tempInt+4>>2]=r3,HEAP32[tempInt+8>>2]=r4,HEAP32[tempInt+12>>2]=r5,tempInt))|0)==0){r9=0;STACKTOP=r1;return r9}r2=_fcntl(HEAP32[r3>>2],HEAP32[r4>>2],(tempInt=STACKTOP,STACKTOP=STACKTOP+4|0,HEAP32[tempInt>>2]=HEAP32[r5>>2],tempInt));if((r2|0)<0){_PyErr_SetFromErrno(HEAP32[_PyExc_IOError>>2]);r9=0;STACKTOP=r1;return r9}else{r9=_PyInt_FromLong(r2);STACKTOP=r1;return r9}}r2=HEAP32[r7>>2];if(r2>>>0>1024){_PyErr_SetString(HEAP32[_PyExc_ValueError>>2],__str64|0);r9=0;STACKTOP=r1;return r9}r5=r8|0;_memcpy(r5,HEAP32[r6>>2],r2);if((_fcntl(HEAP32[r3>>2],HEAP32[r4>>2],(tempInt=STACKTOP,STACKTOP=STACKTOP+4|0,HEAP32[tempInt>>2]=r5,tempInt))|0)<0){_PyErr_SetFromErrno(HEAP32[_PyExc_IOError>>2]);r9=0;STACKTOP=r1;return r9}else{r9=_PyString_FromStringAndSize(r5,HEAP32[r7>>2]);STACKTOP=r1;return r9}}function _fcntl_ioctl(r1,r2){var r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16;r1=STACKTOP;STACKTOP=STACKTOP+1052|0;r3=r1,r4=r3>>2;r5=r1+4,r6=r5>>2;r7=r1+8;r8=r1+12,r9=r8>>2;r10=r1+16,r11=r10>>2;r12=r1+20,r13=r12>>2;r14=r1+24;HEAP32[r13]=1;if((__PyArg_ParseTuple_SizeT(r2,__str59|0,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,HEAP32[tempInt>>2]=FUNCTION_TABLE_OFFSET+4,HEAP32[tempInt+4>>2]=r3,HEAP32[tempInt+8>>2]=r5,HEAP32[tempInt+12>>2]=r8,HEAP32[tempInt+16>>2]=r10,HEAP32[tempInt+20>>2]=r12,tempInt))|0)==0){_PyErr_Clear();if((__PyArg_ParseTuple_SizeT(r2,__str61|0,(tempInt=STACKTOP,STACKTOP=STACKTOP+20|0,HEAP32[tempInt>>2]=FUNCTION_TABLE_OFFSET+4,HEAP32[tempInt+4>>2]=r3,HEAP32[tempInt+8>>2]=r5,HEAP32[tempInt+12>>2]=r8,HEAP32[tempInt+16>>2]=r10,tempInt))|0)==0){_PyErr_Clear();HEAP32[r7>>2]=0;if((__PyArg_ParseTuple_SizeT(r2,__str62|0,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,HEAP32[tempInt>>2]=FUNCTION_TABLE_OFFSET+4,HEAP32[tempInt+4>>2]=r3,HEAP32[tempInt+8>>2]=r5,HEAP32[tempInt+12>>2]=r7,tempInt))|0)==0){r15=0;STACKTOP=r1;return r15}r5=_ioctl(HEAP32[r4],HEAP32[r6],(tempInt=STACKTOP,STACKTOP=STACKTOP+4|0,HEAP32[tempInt>>2]=HEAP32[r7>>2],tempInt));if((r5|0)<0){_PyErr_SetFromErrno(HEAP32[_PyExc_IOError>>2]);r15=0;STACKTOP=r1;return r15}else{r15=_PyInt_FromLong(r5);STACKTOP=r1;return r15}}r5=HEAP32[r11];if((r5|0)>1024){_PyErr_SetString(HEAP32[_PyExc_ValueError>>2],__str60|0);r15=0;STACKTOP=r1;return r15}r7=r14|0;_memcpy(r7,HEAP32[r9],r5);HEAP8[r14+HEAP32[r11]|0]=0;if((_ioctl(HEAP32[r4],HEAP32[r6],(tempInt=STACKTOP,STACKTOP=STACKTOP+4|0,HEAP32[tempInt>>2]=r7,tempInt))|0)<0){_PyErr_SetFromErrno(HEAP32[_PyExc_IOError>>2]);r15=0;STACKTOP=r1;return r15}else{r15=_PyString_FromStringAndSize(r7,HEAP32[r11]);STACKTOP=r1;return r15}}r7=HEAP32[r11];do{if((HEAP32[r13]|0)==0){if((r7|0)<=1024){r5=r14|0;_memcpy(r5,HEAP32[r9],r7);HEAP8[r14+HEAP32[r11]|0]=0;r16=r5;break}_PyErr_SetString(HEAP32[_PyExc_ValueError>>2],__str60|0);r15=0;STACKTOP=r1;return r15}else{if((r7|0)<1025){r5=r14|0;_memcpy(r5,HEAP32[r9],r7);HEAP8[r14+HEAP32[r11]|0]=0;r16=r5;break}else{r16=HEAP32[r9];break}}}while(0);r7=_ioctl(HEAP32[r4],HEAP32[r6],(tempInt=STACKTOP,STACKTOP=STACKTOP+4|0,HEAP32[tempInt>>2]=r16,tempInt));do{if((HEAP32[r13]|0)!=0){r16=HEAP32[r11];if((r16|0)>=1025){break}_memcpy(HEAP32[r9],r14|0,r16)}}while(0);if((r7|0)<0){_PyErr_SetFromErrno(HEAP32[_PyExc_IOError>>2]);r15=0;STACKTOP=r1;return r15}if((HEAP32[r13]|0)==0){r15=_PyString_FromStringAndSize(r14|0,HEAP32[r11]);STACKTOP=r1;return r15}else{r15=_PyInt_FromLong(r7);STACKTOP=r1;return r15}}function _fcntl_flock(r1,r2){var r3,r4,r5,r6;r1=STACKTOP;STACKTOP=STACKTOP+24|0;r3=r1;r4=r1+4;r5=r1+8;if((__PyArg_ParseTuple_SizeT(r2,__str57|0,(tempInt=STACKTOP,STACKTOP=STACKTOP+12|0,HEAP32[tempInt>>2]=FUNCTION_TABLE_OFFSET+4,HEAP32[tempInt+4>>2]=r3,HEAP32[tempInt+8>>2]=r4,tempInt))|0)==0){r6=0;STACKTOP=r1;return r6}r2=HEAP32[r4>>2];do{if((r2|0)==4){HEAP16[r5>>1]=3}else{if((r2&1|0)!=0){HEAP16[r5>>1]=1;break}if((r2&2|0)!=0){HEAP16[r5>>1]=2;break}_PyErr_SetString(HEAP32[_PyExc_ValueError>>2],__str58|0);r6=0;STACKTOP=r1;return r6}}while(0);HEAP32[r5+8>>2]=0;HEAP32[r5+4>>2]=0;HEAP16[r5+2>>1]=0;if((_fcntl(HEAP32[r3>>2],HEAP32[r4>>2]>>>3&1^9,(tempInt=STACKTOP,STACKTOP=STACKTOP+4|0,HEAP32[tempInt>>2]=r5,tempInt))|0)<0){_PyErr_SetFromErrno(HEAP32[_PyExc_IOError>>2]);r6=0;STACKTOP=r1;return r6}else{HEAP32[__Py_NoneStruct>>2]=HEAP32[__Py_NoneStruct>>2]+1|0;r6=__Py_NoneStruct;STACKTOP=r1;return r6}}function _fcntl_lockf(r1,r2){var r3,r4,r5,r6,r7,r8,r9,r10,r11,r12;r1=STACKTOP;STACKTOP=STACKTOP+36|0;r3=r1;r4=r1+4;r5=r1+8;r6=r1+12;r7=r1+16;r8=r1+20,r9=r8>>1;HEAP32[r5>>2]=0;HEAP32[r6>>2]=0;HEAP32[r7>>2]=0;if((__PyArg_ParseTuple_SizeT(r2,__str55|0,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,HEAP32[tempInt>>2]=FUNCTION_TABLE_OFFSET+4,HEAP32[tempInt+4>>2]=r3,HEAP32[tempInt+8>>2]=r4,HEAP32[tempInt+12>>2]=r6,HEAP32[tempInt+16>>2]=r7,HEAP32[tempInt+20>>2]=r5,tempInt))|0)==0){r10=0;STACKTOP=r1;return r10}r2=HEAP32[r4>>2];do{if((r2|0)==4){HEAP16[r9]=3}else{if((r2&1|0)!=0){HEAP16[r9]=1;break}if((r2&2|0)!=0){HEAP16[r9]=2;break}_PyErr_SetString(HEAP32[_PyExc_ValueError>>2],__str56|0);r10=0;STACKTOP=r1;return r10}}while(0);r2=r8+8|0;HEAP32[r2>>2]=0;r11=r8+4|0;HEAP32[r11>>2]=0;r12=HEAP32[r7>>2];do{if((r12|0)!=0){HEAP32[r11>>2]=_PyInt_AsLong(r12);if((_PyErr_Occurred()|0)==0){break}else{r10=0}STACKTOP=r1;return r10}}while(0);r12=HEAP32[r6>>2];do{if((r12|0)!=0){HEAP32[r2>>2]=_PyInt_AsLong(r12);if((_PyErr_Occurred()|0)==0){break}else{r10=0}STACKTOP=r1;return r10}}while(0);HEAP16[r9+1]=HEAP32[r5>>2]&65535;if((_fcntl(HEAP32[r3>>2],HEAP32[r4>>2]>>>3&1^9,(tempInt=STACKTOP,STACKTOP=STACKTOP+4|0,HEAP32[tempInt>>2]=r8,tempInt))|0)<0){_PyErr_SetFromErrno(HEAP32[_PyExc_IOError>>2]);r10=0;STACKTOP=r1;return r10}else{HEAP32[__Py_NoneStruct>>2]=HEAP32[__Py_NoneStruct>>2]+1|0;r10=__Py_NoneStruct;STACKTOP=r1;return r10}}function _conv_descriptor(r1,r2){var r3,r4;r3=_PyObject_AsFileDescriptor(r1);if((r3|0)<0){r4=0;return r4}HEAP32[r2>>2]=r3;r4=1;return r4}
// EMSCRIPTEN_END_FUNCS
Module["_initfcntl"] = _initfcntl;
// Warning: printing of i64 values may be slightly rounded! No deep i64 math used, so precise i64 code not included
var i64Math = null;
// === Auto-generated postamble setup entry stuff ===
function run(args) {
  initRuntime();
}
Module['run'] = run;
// {{PRE_RUN_ADDITIONS}}
run();
// {{POST_RUN_ADDITIONS}}
  // {{MODULE_ADDITIONS}}
  return Module;
});
